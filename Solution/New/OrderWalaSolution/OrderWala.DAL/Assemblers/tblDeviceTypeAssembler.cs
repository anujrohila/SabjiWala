//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-04-22 - 18:46:07
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderWala.Domain;

namespace OrderWala.DAL
{

    /// <summary>
    /// Assembler for <see cref="tblDeviceType"/> and <see cref="tblDeviceTypeDTO"/>.
    /// </summary>
    public static partial class tblDeviceTypeAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblDeviceTypeDTO"/> converted from <see cref="tblDeviceType"/>.</param>
        static partial void OnDTO(this tblDeviceType entity, tblDeviceTypeDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblDeviceType"/> converted from <see cref="tblDeviceTypeDTO"/>.</param>
        static partial void OnEntity(this tblDeviceTypeDTO dto, tblDeviceType entity);

        /// <summary>
        /// Converts this instance of <see cref="tblDeviceTypeDTO"/> to an instance of <see cref="tblDeviceType"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblDeviceTypeDTO"/> to convert.</param>
        public static tblDeviceType ToEntity(this tblDeviceTypeDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblDeviceType();

            entity.DeviceId = dto.DeviceId;
            entity.DeviceType = dto.DeviceType;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblDeviceType"/> to an instance of <see cref="tblDeviceTypeDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblDeviceType"/> to convert.</param>
        public static tblDeviceTypeDTO ToDTO(this tblDeviceType entity)
        {
            if (entity == null) return null;

            var dto = new tblDeviceTypeDTO();

            dto.DeviceId = entity.DeviceId;
            dto.DeviceType = entity.DeviceType;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblDeviceTypeDTO"/> to an instance of <see cref="tblDeviceType"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblDeviceType> ToEntities(this IEnumerable<tblDeviceTypeDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblDeviceType"/> to an instance of <see cref="tblDeviceTypeDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblDeviceTypeDTO> ToDTOs(this IEnumerable<tblDeviceType> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
