//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-04-22 - 18:11:38
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderWala.Domain;
using OrderWala.DAL;

namespace OrderWala.DAL
{

    /// <summary>
    /// Assembler for <see cref="tblArea"/> and <see cref="tblAreaDTO"/>.
    /// </summary>
    public static partial class tblAreaAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblAreaDTO"/> converted from <see cref="tblArea"/>.</param>
        static partial void OnDTO(this tblArea entity, tblAreaDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblArea"/> converted from <see cref="tblAreaDTO"/>.</param>
        static partial void OnEntity(this tblAreaDTO dto, tblArea entity);

        /// <summary>
        /// Converts this instance of <see cref="tblAreaDTO"/> to an instance of <see cref="tblArea"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblAreaDTO"/> to convert.</param>
        public static tblArea ToEntity(this tblAreaDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblArea();

            entity.AreaId = dto.AreaId;
            entity.AreaName = dto.AreaName;
            entity.CityId = dto.CityId;
            entity.StateId = dto.StateId;
            entity.Description = dto.Description;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblArea"/> to an instance of <see cref="tblAreaDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblArea"/> to convert.</param>
        public static tblAreaDTO ToDTO(this tblArea entity)
        {
            if (entity == null) return null;

            var dto = new tblAreaDTO();

            dto.AreaId = entity.AreaId;
            dto.AreaName = entity.AreaName;
            dto.CityId = entity.CityId;
            dto.StateId = entity.StateId;
            dto.Description = entity.Description;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblAreaDTO"/> to an instance of <see cref="tblArea"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblArea> ToEntities(this IEnumerable<tblAreaDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblArea"/> to an instance of <see cref="tblAreaDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblAreaDTO> ToDTOs(this IEnumerable<tblArea> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
