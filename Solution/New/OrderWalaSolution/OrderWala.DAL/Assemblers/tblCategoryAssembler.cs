//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-04-17 - 08:15:06
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderWala.Domain;
using OrderWala.DAL;

namespace OrderWala.DAL
{

    /// <summary>
    /// Assembler for <see cref="tblCategory"/> and <see cref="tblCategoryDTO"/>.
    /// </summary>
    public static partial class tblCategoryAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblCategoryDTO"/> converted from <see cref="tblCategory"/>.</param>
        static partial void OnDTO(this tblCategory entity, tblCategoryDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblCategory"/> converted from <see cref="tblCategoryDTO"/>.</param>
        static partial void OnEntity(this tblCategoryDTO dto, tblCategory entity);

        /// <summary>
        /// Converts this instance of <see cref="tblCategoryDTO"/> to an instance of <see cref="tblCategory"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblCategoryDTO"/> to convert.</param>
        public static tblCategory ToEntity(this tblCategoryDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblCategory();

            entity.CategoryId = dto.CategoryId;
            entity.CategoryName = dto.CategoryName;
            entity.LanguageId = dto.LanguageId;
            entity.Description = dto.Description;
            entity.Logo = dto.Logo;
            entity.IsActive = dto.IsActive;
            entity.IsDeleted = dto.IsDeleted;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblCategory"/> to an instance of <see cref="tblCategoryDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblCategory"/> to convert.</param>
        public static tblCategoryDTO ToDTO(this tblCategory entity)
        {
            if (entity == null) return null;

            var dto = new tblCategoryDTO();

            dto.CategoryId = entity.CategoryId;
            dto.CategoryName = entity.CategoryName;
            dto.LanguageId = entity.LanguageId;
            dto.Description = entity.Description;
            dto.Logo = entity.Logo;
            dto.IsActive = entity.IsActive;
            dto.IsDeleted = entity.IsDeleted;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblCategoryDTO"/> to an instance of <see cref="tblCategory"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblCategory> ToEntities(this IEnumerable<tblCategoryDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblCategory"/> to an instance of <see cref="tblCategoryDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblCategoryDTO> ToDTOs(this IEnumerable<tblCategory> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
