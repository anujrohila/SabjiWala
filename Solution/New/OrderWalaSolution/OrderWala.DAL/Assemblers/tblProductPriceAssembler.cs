//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-04-17 - 08:15:08
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderWala.Domain;
using OrderWala.DAL;

namespace OrderWala.DAL
{

    /// <summary>
    /// Assembler for <see cref="tblProductPrice"/> and <see cref="tblProductPriceDTO"/>.
    /// </summary>
    public static partial class tblProductPriceAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblProductPriceDTO"/> converted from <see cref="tblProductPrice"/>.</param>
        static partial void OnDTO(this tblProductPrice entity, tblProductPriceDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblProductPrice"/> converted from <see cref="tblProductPriceDTO"/>.</param>
        static partial void OnEntity(this tblProductPriceDTO dto, tblProductPrice entity);

        /// <summary>
        /// Converts this instance of <see cref="tblProductPriceDTO"/> to an instance of <see cref="tblProductPrice"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblProductPriceDTO"/> to convert.</param>
        public static tblProductPrice ToEntity(this tblProductPriceDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblProductPrice();

            entity.PriceId = dto.PriceId;
            entity.ProductId = dto.ProductId;
            entity.CityId = dto.CityId;
            entity.OldPrice = dto.OldPrice;
            entity.NewPrice = dto.NewPrice;
            entity.CreationDateTime = dto.CreationDateTime;
            entity.UpdationDateTime = dto.UpdationDateTime;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblProductPrice"/> to an instance of <see cref="tblProductPriceDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblProductPrice"/> to convert.</param>
        public static tblProductPriceDTO ToDTO(this tblProductPrice entity)
        {
            if (entity == null) return null;

            var dto = new tblProductPriceDTO();

            dto.PriceId = entity.PriceId;
            dto.ProductId = entity.ProductId;
            dto.CityId = entity.CityId;
            dto.OldPrice = entity.OldPrice;
            dto.NewPrice = entity.NewPrice;
            dto.CreationDateTime = entity.CreationDateTime;
            dto.UpdationDateTime = entity.UpdationDateTime;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblProductPriceDTO"/> to an instance of <see cref="tblProductPrice"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblProductPrice> ToEntities(this IEnumerable<tblProductPriceDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblProductPrice"/> to an instance of <see cref="tblProductPriceDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblProductPriceDTO> ToDTOs(this IEnumerable<tblProductPrice> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
