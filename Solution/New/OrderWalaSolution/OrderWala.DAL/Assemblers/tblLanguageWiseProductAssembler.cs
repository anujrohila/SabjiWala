//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-04-17 - 08:15:07
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderWala.Domain;
using OrderWala.DAL;

namespace OrderWala.DAL
{

    /// <summary>
    /// Assembler for <see cref="tblLanguageWiseProduct"/> and <see cref="tblLanguageWiseProductDTO"/>.
    /// </summary>
    public static partial class tblLanguageWiseProductAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblLanguageWiseProductDTO"/> converted from <see cref="tblLanguageWiseProduct"/>.</param>
        static partial void OnDTO(this tblLanguageWiseProduct entity, tblLanguageWiseProductDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblLanguageWiseProduct"/> converted from <see cref="tblLanguageWiseProductDTO"/>.</param>
        static partial void OnEntity(this tblLanguageWiseProductDTO dto, tblLanguageWiseProduct entity);

        /// <summary>
        /// Converts this instance of <see cref="tblLanguageWiseProductDTO"/> to an instance of <see cref="tblLanguageWiseProduct"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblLanguageWiseProductDTO"/> to convert.</param>
        public static tblLanguageWiseProduct ToEntity(this tblLanguageWiseProductDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblLanguageWiseProduct();

            entity.RowId = dto.RowId;
            entity.ProductId = dto.ProductId;
            entity.LanguageId = dto.LanguageId;
            entity.ProductName = dto.ProductName;
            entity.Description = dto.Description;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblLanguageWiseProduct"/> to an instance of <see cref="tblLanguageWiseProductDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblLanguageWiseProduct"/> to convert.</param>
        public static tblLanguageWiseProductDTO ToDTO(this tblLanguageWiseProduct entity)
        {
            if (entity == null) return null;

            var dto = new tblLanguageWiseProductDTO();

            dto.RowId = entity.RowId;
            dto.ProductId = entity.ProductId;
            dto.LanguageId = entity.LanguageId;
            dto.ProductName = entity.ProductName;
            dto.Description = entity.Description;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblLanguageWiseProductDTO"/> to an instance of <see cref="tblLanguageWiseProduct"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblLanguageWiseProduct> ToEntities(this IEnumerable<tblLanguageWiseProductDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblLanguageWiseProduct"/> to an instance of <see cref="tblLanguageWiseProductDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblLanguageWiseProductDTO> ToDTOs(this IEnumerable<tblLanguageWiseProduct> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
