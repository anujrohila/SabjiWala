//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-05-07 - 11:56:52
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderWala.Domain;

namespace OrderWala.DAL
{

    /// <summary>
    /// Assembler for <see cref="tblLanguageWiseCategory"/> and <see cref="tblLanguageWiseCategoryDTO"/>.
    /// </summary>
    public static partial class tblLanguageWiseCategoryAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblLanguageWiseCategoryDTO"/> converted from <see cref="tblLanguageWiseCategory"/>.</param>
        static partial void OnDTO(this tblLanguageWiseCategory entity, tblLanguageWiseCategoryDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblLanguageWiseCategory"/> converted from <see cref="tblLanguageWiseCategoryDTO"/>.</param>
        static partial void OnEntity(this tblLanguageWiseCategoryDTO dto, tblLanguageWiseCategory entity);

        /// <summary>
        /// Converts this instance of <see cref="tblLanguageWiseCategoryDTO"/> to an instance of <see cref="tblLanguageWiseCategory"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblLanguageWiseCategoryDTO"/> to convert.</param>
        public static tblLanguageWiseCategory ToEntity(this tblLanguageWiseCategoryDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblLanguageWiseCategory();

            entity.RowId = dto.RowId;
            entity.CategoryId = dto.CategoryId;
            entity.CategoryName = dto.CategoryName;
            entity.Description = dto.Description;
            entity.LanguageId = dto.LanguageId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblLanguageWiseCategory"/> to an instance of <see cref="tblLanguageWiseCategoryDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblLanguageWiseCategory"/> to convert.</param>
        public static tblLanguageWiseCategoryDTO ToDTO(this tblLanguageWiseCategory entity)
        {
            if (entity == null) return null;

            var dto = new tblLanguageWiseCategoryDTO();

            dto.RowId = entity.RowId;
            dto.CategoryId = entity.CategoryId;
            dto.CategoryName = entity.CategoryName;
            dto.Description = entity.Description;
            dto.LanguageId = entity.LanguageId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblLanguageWiseCategoryDTO"/> to an instance of <see cref="tblLanguageWiseCategory"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblLanguageWiseCategory> ToEntities(this IEnumerable<tblLanguageWiseCategoryDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblLanguageWiseCategory"/> to an instance of <see cref="tblLanguageWiseCategoryDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblLanguageWiseCategoryDTO> ToDTOs(this IEnumerable<tblLanguageWiseCategory> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
