//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-04-17 - 08:15:08
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using OrderWala.Domain.DTO;
using OrderWala.DAL;

namespace OrderWala.DAL.Assemblers
{

    /// <summary>
    /// Assembler for <see cref="tblProduct"/> and <see cref="tblProductDTO"/>.
    /// </summary>
    public static partial class tblProductAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblProductDTO"/> converted from <see cref="tblProduct"/>.</param>
        static partial void OnDTO(this tblProduct entity, tblProductDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblProduct"/> converted from <see cref="tblProductDTO"/>.</param>
        static partial void OnEntity(this tblProductDTO dto, tblProduct entity);

        /// <summary>
        /// Converts this instance of <see cref="tblProductDTO"/> to an instance of <see cref="tblProduct"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblProductDTO"/> to convert.</param>
        public static tblProduct ToEntity(this tblProductDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblProduct();

            entity.ProductId = dto.ProductId;
            entity.SubCategoryId = dto.SubCategoryId;
            entity.CategoryId = dto.CategoryId;
            entity.QuantityTypeId = dto.QuantityTypeId;
            entity.IsActive = dto.IsActive;
            entity.IsDeleted = dto.IsDeleted;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblProduct"/> to an instance of <see cref="tblProductDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblProduct"/> to convert.</param>
        public static tblProductDTO ToDTO(this tblProduct entity)
        {
            if (entity == null) return null;

            var dto = new tblProductDTO();

            dto.ProductId = entity.ProductId;
            dto.SubCategoryId = entity.SubCategoryId;
            dto.CategoryId = entity.CategoryId;
            dto.QuantityTypeId = entity.QuantityTypeId;
            dto.IsActive = entity.IsActive;
            dto.IsDeleted = entity.IsDeleted;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblProductDTO"/> to an instance of <see cref="tblProduct"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblProduct> ToEntities(this IEnumerable<tblProductDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblProduct"/> to an instance of <see cref="tblProductDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblProductDTO> ToDTOs(this IEnumerable<tblProduct> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
